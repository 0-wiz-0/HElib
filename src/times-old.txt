*** matmul1D: m=15709, p=2, r=1, L=10, g=27, dim=0
m = 15709, p = 2, phi(m) = 15004
  ord(p)=22
  generator 5 has order (== Z_m^*) of 682

 Multiplying 1D with MatMulBase+CDRT cache...
  AAAA_matmul1D_cache: 13.1646 / 1 = 13.1646   [Test_matmul1D.cpp:342]
  AAAA_matmul1D_apply: 5.34394 / 1 = 5.34394   [Test_matmul1D.cpp:351]
  BluesteinFFT: 3.18799 / 1435 = 0.0022216   [bluestein.cpp:65]
  DoubleCRT: 0.638309 / 52 = 0.0122752   [DoubleCRT.cpp:378]
  FFT: 2.65648 / 1076 = 0.00246885   [CModulus.cpp:248]
  FFT: 2.65671 / 205 = 0.0129596   [DoubleCRT.cpp:48]
  FFT_remainder: 0.207383 / 1076 = 0.000192735   [CModulus.cpp:253]
  KS_loop: 0.269406 / 153 = 0.00176082   [Ctxt.cpp:114]
  KS_loop_1: 0.039523 / 153 = 0.00025832   [Ctxt.cpp:121]
  KS_loop_2: 0.051823 / 153 = 0.000338712   [Ctxt.cpp:125]
  KS_loop_3: 0.058456 / 153 = 0.000382065   [Ctxt.cpp:130]
  KS_loop_4: 0.014422 / 153 = 9.42614e-05   [Ctxt.cpp:134]
  addCtxt: 0.197794 / 708 = 0.00027937   [Ctxt.cpp:612]
  addPart: 0.074497 / 357 = 0.000208675   [Ctxt.cpp:523]
  addPrimes: 3.18502 / 153 = 0.0208171   [DoubleCRT.cpp:318]
  addPrimes_5: 3.19232 / 153 = 0.0208648   [DoubleCRT.cpp:301]
  automorph: 0.026262 / 51 = 0.000514941   [Ctxt.cpp:922]
  breakIntoDigits: 3.20124 / 51 = 0.0627695   [DoubleCRT.cpp:287]
  do_mul: 0.484565 / 1670 = 0.000290159   [DoubleCRT.cpp:160]
  iFFT: 1.24904 / 359 = 0.00347922   [CModulus.cpp:278]
  iFFT_division: 0.433876 / 359 = 0.00120857   [CModulus.cpp:332]
  keySwitchPart: 3.47523 / 51 = 0.0681418   [Ctxt.cpp:419]
  modDownToSet: 1.11256 / 26 = 0.0427908   [Ctxt.cpp:257]
  multByConstant: 0.386783 / 682 = 0.00056713   [Ctxt.cpp:843]
  randomize: 0.08398 / 153 = 0.000548889   [DoubleCRT.cpp:891]
  randomize_stream: 0.045959 / 45442 = 1.01138e-06   [DoubleCRT.cpp:918]
  reLinearize: 4.60974 / 51 = 0.0903871   [Ctxt.cpp:359]
  rotate1D: 4.64727 / 51 = 0.091123   [EncryptedArray.cpp:53]
  smartAutomorph: 4.64722 / 51 = 0.091122   [Ctxt.cpp:947]
  toPoly: 1.57245 / 205 = 0.00767051   [DoubleCRT.cpp:588]
  toPoly_CRT: 0.289401 / 205 = 0.00141171   [DoubleCRT.cpp:641]
  toPoly_FFT: 1.26864 / 205 = 0.00618849   [DoubleCRT.cpp:621]
Nice!!


---------------

*** matmul1D: m=5461, p=2, r=1, L=10, g=12, dim=0
m = 5461, p = 2, phi(m) = 5292
  ord(p)=14
  generator 3 has order (== Z_m^*) of 126
  generator 509 has order (== Z_m^*) of 3

 Multiplying 1D with MatMulBase+CDRT cache...
  AAAA_matmul1D_cache: 1.08816 / 1 = 1.08816   [Test_matmul1D.cpp:342]
  AAAA_matmul1D_apply: 1.14574 / 1 = 1.14574   [Test_matmul1D.cpp:351]
  BluesteinFFT: 0.799635 / 805 = 0.000993335   [bluestein.cpp:65]
  DoubleCRT: 0.183341 / 34 = 0.00539238   [DoubleCRT.cpp:378]
  FFT: 0.650158 / 602 = 0.00108   [CModulus.cpp:248]
  FFT: 0.650249 / 115 = 0.00565434   [DoubleCRT.cpp:48]
  FFT_remainder: 0.040441 / 602 = 6.71777e-05   [CModulus.cpp:253]
  KS_loop: 0.048793 / 81 = 0.000602383   [Ctxt.cpp:114]
  KS_loop_1: 0.007438 / 81 = 9.18272e-05   [Ctxt.cpp:121]
  KS_loop_2: 0.00863 / 81 = 0.000106543   [Ctxt.cpp:125]
  KS_loop_3: 0.00968 / 81 = 0.000119506   [Ctxt.cpp:130]
  KS_loop_4: 0.002769 / 81 = 3.41852e-05   [Ctxt.cpp:134]
  addCtxt: 0.012095 / 137 = 8.82847e-05   [Ctxt.cpp:612]
  addPart: 0.012992 / 189 = 6.87407e-05   [Ctxt.cpp:523]
  addPrimes: 0.724376 / 81 = 0.00894291   [DoubleCRT.cpp:318]
  addPrimes_5: 0.725828 / 81 = 0.00896084   [DoubleCRT.cpp:301]
  automorph: 0.003646 / 27 = 0.000135037   [Ctxt.cpp:922]
  breakIntoDigits: 0.727491 / 27 = 0.0269441   [DoubleCRT.cpp:287]
  do_mul: 0.040532 / 414 = 9.79034e-05   [DoubleCRT.cpp:160]
  iFFT: 0.313064 / 203 = 0.00154219   [CModulus.cpp:278]
  iFFT_division: 0.10825 / 203 = 0.000533251   [CModulus.cpp:332]
  keySwitchPart: 0.778527 / 27 = 0.0288343   [Ctxt.cpp:419]
  modDownToSet: 0.312911 / 17 = 0.0184065   [Ctxt.cpp:257]
  multByConstant: 0.023446 / 126 = 0.000186079   [Ctxt.cpp:843]
  randomize: 0.016461 / 81 = 0.000203222   [DoubleCRT.cpp:891]
  randomize_stream: 0.009163 / 8910 = 1.0284e-06   [DoubleCRT.cpp:918]
  reLinearize: 1.09619 / 27 = 0.0405996   [Ctxt.cpp:359]
  rotate1D: 1.10203 / 21 = 0.0524776   [EncryptedArray.cpp:53]
  smartAutomorph: 1.10202 / 21 = 0.0524773   [Ctxt.cpp:947]
  toPoly: 0.37575 / 115 = 0.00326739   [DoubleCRT.cpp:588]
  toPoly_CRT: 0.056232 / 115 = 0.000488974   [DoubleCRT.cpp:641]
  toPoly_FFT: 0.316938 / 115 = 0.00275598   [DoubleCRT.cpp:621]
Nice!!


---------------

*** matmul1D: m=20801, p=2, r=1, L=10, g=5, dim=0
m = 20801, p = 2, phi(m) = 18000
  ord(p)=60
  generator 3 has order (== Z_m^*) of 30
  generator 95 has order (== Z_m^*) of 10

 Multiplying 1D with MatMulBase+CDRT cache...
  AAAA_matmul1D_cache: 1.01965 / 1 = 1.01965   [Test_matmul1D.cpp:342]
  AAAA_matmul1D_apply: 1.55011 / 1 = 1.55011   [Test_matmul1D.cpp:351]
  BluesteinFFT: 1.12667 / 245 = 0.00459865   [bluestein.cpp:65]
  DoubleCRT: 0.196206 / 8 = 0.0245257   [DoubleCRT.cpp:378]
  FFT: 0.902208 / 184 = 0.0049033   [CModulus.cpp:248]
  FFT: 0.902235 / 35 = 0.0257781   [DoubleCRT.cpp:48]
  FFT_remainder: 0.041787 / 184 = 0.000227103   [CModulus.cpp:253]
  KS_loop: 0.059702 / 27 = 0.00221119   [Ctxt.cpp:114]
  KS_loop_1: 0.008359 / 27 = 0.000309593   [Ctxt.cpp:121]
  KS_loop_2: 0.012455 / 27 = 0.000461296   [Ctxt.cpp:125]
  KS_loop_3: 0.012405 / 27 = 0.000459444   [Ctxt.cpp:130]
  KS_loop_4: 0.003056 / 27 = 0.000113185   [Ctxt.cpp:134]
  addCtxt: 0.013425 / 34 = 0.000394853   [Ctxt.cpp:612]
  addPart: 0.017443 / 63 = 0.000276873   [Ctxt.cpp:523]
  addPrimes: 1.09609 / 27 = 0.0405959   [DoubleCRT.cpp:318]
  addPrimes_5: 1.09764 / 27 = 0.0406534   [DoubleCRT.cpp:301]
  automorph: 0.006279 / 9 = 0.000697667   [Ctxt.cpp:922]
  breakIntoDigits: 1.0996 / 9 = 0.122177   [DoubleCRT.cpp:287]
  do_mul: 0.038857 / 114 = 0.000340851   [DoubleCRT.cpp:160]
  iFFT: 0.450441 / 61 = 0.00738428   [CModulus.cpp:278]
  iFFT_division: 0.164578 / 61 = 0.002698   [CModulus.cpp:332]
  keySwitchPart: 1.16016 / 9 = 0.128907   [Ctxt.cpp:419]
  modDownToSet: 0.335763 / 4 = 0.0839407   [Ctxt.cpp:257]
  multByConstant: 0.018104 / 30 = 0.000603467   [Ctxt.cpp:843]
  randomize: 0.018509 / 27 = 0.000685519   [DoubleCRT.cpp:891]
  randomize_stream: 0.010167 / 9934 = 1.02345e-06   [DoubleCRT.cpp:918]
  reLinearize: 1.5009 / 9 = 0.166767   [Ctxt.cpp:359]
  rotate1D: 1.51045 / 9 = 0.167828   [EncryptedArray.cpp:53]
  smartAutomorph: 1.51044 / 9 = 0.167827   [Ctxt.cpp:947]
  toPoly: 0.515782 / 35 = 0.0147366   [DoubleCRT.cpp:588]
  toPoly_CRT: 0.057988 / 35 = 0.0016568   [DoubleCRT.cpp:641]
  toPoly_FFT: 0.454457 / 35 = 0.0129845   [DoubleCRT.cpp:621]
Nice!!


---------------

*** matmul1D: m=10013, p=2, r=1, L=10, g=3, dim=0
m = 10013, p = 2, phi(m) = 8640
  ord(p)=360
  generator 3 has order (!= Z_m^*) of 12
  generator 2262 has order (== Z_m^*) of 2
  T = [1 2262 3 6786 9 332 27 996 81 2988 243 8964 729 6866 2187 572 6561 1716 9670 5148 8984 5431 6926 6280 ]

 Multiplying 1D with MatMulBase+CDRT cache...
  AAAA_matmul1D_cache: 0.18863 / 1 = 0.18863   [Test_matmul1D.cpp:342]
  AAAA_matmul1D_apply: 0.84704 / 1 = 0.84704   [Test_matmul1D.cpp:351]
  BluesteinFFT: 0.630998 / 295 = 0.00213898   [bluestein.cpp:65]
  DoubleCRT: 0.06345 / 5 = 0.01269   [DoubleCRT.cpp:423]
  DoubleCRT: 0.091541 / 8 = 0.0114426   [DoubleCRT.cpp:378]
  FFT: 0.461599 / 200 = 0.00230799   [CModulus.cpp:248]
  FFT: 0.461631 / 38 = 0.0121482   [DoubleCRT.cpp:48]
  FFT: 0.063433 / 29 = 0.00218734   [CModulus.cpp:262]
  FFT: 0.06344 / 5 = 0.012688   [DoubleCRT.cpp:67]
  FFT_remainder: 0.000477 / 29 = 1.64483e-05   [CModulus.cpp:267]
  FFT_remainder: 0.022337 / 200 = 0.000111685   [CModulus.cpp:253]
  KS_loop: 0.031268 / 30 = 0.00104227   [Ctxt.cpp:114]
  KS_loop_1: 0.004481 / 30 = 0.000149367   [Ctxt.cpp:121]
  KS_loop_2: 0.006895 / 30 = 0.000229833   [Ctxt.cpp:125]
  KS_loop_3: 0.005855 / 30 = 0.000195167   [Ctxt.cpp:130]
  KS_loop_4: 0.00164 / 30 = 5.46667e-05   [Ctxt.cpp:134]
  addCtxt: 0.003641 / 24 = 0.000151708   [Ctxt.cpp:612]
  addPart: 0.010499 / 70 = 0.000149986   [Ctxt.cpp:523]
  addPrimes: 0.573302 / 30 = 0.0191101   [DoubleCRT.cpp:318]
  addPrimes_5: 0.574147 / 30 = 0.0191382   [DoubleCRT.cpp:301]
  automorph: 0.002195 / 10 = 0.0002195   [Ctxt.cpp:922]
  breakIntoDigits: 0.575431 / 10 = 0.0575431   [DoubleCRT.cpp:287]
  do_mul: 0.014953 / 94 = 0.000159074   [DoubleCRT.cpp:160]
  iFFT: 0.226646 / 66 = 0.00343403   [CModulus.cpp:278]
  iFFT_division: 0.083522 / 66 = 0.00126548   [CModulus.cpp:332]
  keySwitchPart: 0.607278 / 10 = 0.0607278   [Ctxt.cpp:419]
  modDownToSet: 0.156681 / 4 = 0.0391702   [Ctxt.cpp:257]
  multByConstant: 0.004628 / 17 = 0.000272235   [Ctxt.cpp:843]
  randomize: 0.009573 / 30 = 0.0003191   [DoubleCRT.cpp:891]
  randomize_stream: 0.005322 / 5204 = 1.02267e-06   [DoubleCRT.cpp:918]
  reLinearize: 0.767509 / 10 = 0.0767509   [Ctxt.cpp:359]
  rotate1D: 0.839022 / 5 = 0.167804   [EncryptedArray.cpp:53]
  smartAutomorph: 0.772699 / 10 = 0.0772699   [Ctxt.cpp:947]
  toPoly: 0.261109 / 38 = 0.00687129   [DoubleCRT.cpp:588]
  toPoly_CRT: 0.030846 / 38 = 0.000811737   [DoubleCRT.cpp:641]
  toPoly_FFT: 0.2287 / 38 = 0.00601842   [DoubleCRT.cpp:621]
Nice!!

